plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.flywaydb.flyway" version "9.8.1"
}

group = 'com.company.innowise.airticketsapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    flywayVersion = '9.14.1'
    hiberateVersion = '8.0.0.Final'
    modelmapperVersion = '2.1.1'
    modelgenVer = '6.1.6.Final'
    swaggerVer = '3.0.0'
    swaggerUiVer = '2.0.2'
    jwtVersion = '4.2.2'
    lombokVersion = '1.18.22'
    jpaMetamodelVersion = '6.1.6.Final'
    springCloudVersion = '4.0.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'com.auth0', name: 'java-jwt', version: "${jwtVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: "${springCloudVersion}"
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-openfeign-core', version: "${springCloudVersion}"
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter', version: "${springCloudVersion}"
//    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: "${springCloudVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: "${modelmapperVersion}"
    annotationProcessor group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: "${jpaMetamodelVersion}"
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: "${hiberateVersion}"
    implementation group: 'org.flywaydb', name: 'flyway-core', version: "${flywayVersion}"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'com.auth0', name: 'java-jwt', version: "${jwtVersion}"
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVer}"
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVer}"
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: "${swaggerUiVer}"
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: "${hiberateVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/generated/java']
        }
    }
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": "com.company.innowise.airticketsapp.businessservice.BusinessServiceApplication"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}